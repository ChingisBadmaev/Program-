#include <iostream>
#include <vector>
using namespace std;
double Continuous_knapsack(double v, int n, vector <double> a, vector <double> b){
 int max = 0;
 int cen = 0;
 int e;
 vector <double> c(n);
 for (int i = 0; i < n; i++)
  c[i] = b[i]/a[i];
 for (int l = 0; l < n; l++){
  for (int i = 0; i < n; i++)
   if (max < c[i]){
    max = c[i];
    e = i;
   }
  if (v != 0)
   if (v >= a[e]){
    v -= a[e];
    cen += b[e];
   }
   else {
    cen += b[e]*(v/a[e]);
    v = 0;
   }
  c[e] = 0;
  max = 0;
 }
 return cen;
}
int main(){
 double v;
 int n;
 cin >> v >> n;
 vector <double> a(n);
 vector <double> b(n);
 for (int i = 0; i < n; i++)
  cin >> a[i] >> b[i];
 cout << Continuous_knapsack(v, n, a, b);
 return 0;
}
