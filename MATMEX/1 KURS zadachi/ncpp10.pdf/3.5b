#include <iostream>

using namespace std;

template<class T>
struct Node
{
	bool j;
	T d;
	Node<T> *n;
	Node(bool jj, int dd = 0, Node<T> *nn = nullptr) : j(jj), d(dd), n(nn) {}
};

template<class T>
Node<T> * create() {
	Node<T> *p = new Node<T>(0, 0, nullptr);
	Node<T> **t = &p;
	for (int i = 1; i < 5; i++)
		*t = new Node<T>(i % 2, 2*i, *t);
	return p;
}

template<class T>
void out(Node<T> *p) 
{
	while(p != nullptr)
	{
		cout << p->d << " " << p->j << endl;
		p = p->n;
	}
}

template<class T>
void del(Node<T> *&f)
{
	Node<T> **t = &f;
	while (*t != nullptr)
	{
		if (*t->j == 1)
		{
			Node<T> *p = *t;
			*t = (*t)->n;
			delete p;
			t = &(*t)->n;
		}
		else t = &(*t)->n;
	}
}

int main()
{
	Node<int> *AA = create<int>();
	out(AA);
	del(AA);
	cout << endl;
	out(AA);
	system("pause");
	return 0;
}
