#include <iostream>
using namespace std;

struct Integer;
struct Real;

struct Number{
	virtual ~Number() {}
	virtual bool operator<(const Number &) const = 0;
	virtual bool operator<(const Integer &) const = 0;
	virtual bool operator<(const Real &) const = 0;
	virtual bool operator>(const Number &) const = 0;
	virtual bool operator>(const Integer &) const = 0;
	virtual bool operator>(const Real &) const = 0;
	virtual double operator+(const Number &) const = 0;
	virtual double operator+(const Integer &) const = 0;
	virtual double operator+(const Real &) const = 0;
};

struct Integer : Number{
	int n;
	bool operator<(const Number &x) const { return x > *this; }
	bool operator<(const Integer &x) const;
	bool operator<(const Real &x) const;
	bool operator>(const Number &x) const { return x < *this; }
	bool operator>(const Integer &x) const;
	bool operator>(const Real &x) const;
	double operator+(const Number &x) const { return x + *this; }
	double operator+(const Integer &x) const;
	double operator+(const Real &x) const;
};

struct Real : Number{
	double a;
	bool operator<(const Number &x) const {	return x > *this; }
	bool operator<(const Integer &x) const { return a < x.n; }
	bool operator<(const Real &x) const { return a < x.a; }
	bool operator>(const Number &x) const { return x < *this; }
	bool operator>(const Integer &x) const { return a > x.n; }
	bool operator>(const Real &x) const	{ return a > x.a; }
	double operator+(const Number &x) const { return x + *this; }
	double operator+(const Integer &x) const { return a + (double)x.n; }
	double operator+(const Real &x) const { return a + x.a; }
};

bool Integer::operator<(const Integer &x) const { return n < x.n; }
bool Integer::operator<(const Real &x) const { return n < x.a; }
bool Integer::operator>(const Integer &x) const { return n > x.n; }
bool Integer::operator>(const Real &x) const { return n > x.a; }
double Integer::operator+(const Integer &x) const { return n + x.n; }
double Integer::operator+(const Real &x) const { return (double)n + x.a; }

int main() {
	Integer x;
	x.n = 1;
	Real y;
	y.a = 2.5;
	Number &p = x, &q = y;
	cout << (p < q) << endl;
	cout << (p + q) << endl;
	system("pause");
	return 0;
}
