#include <iostream>

using namespace std;

template<class T>
struct BNode
{
	T data;
	BNode<T>* left;
	BNode<T>* right;
	BNode(T dd, BNode<T>* l = nullptr, BNode<T>* r = nullptr) :data(dd), left(l), right(r) {}
};

template <class T>
int height(BNode<T>* p, int i = 0)
{
	if (p == nullptr) return i;
	if (height(p->left, i + 1) > height(p->right, i + 1)) return height(p->left, i + 1);
	else return height(p->right, i + 1);
}

int main()
{
	BNode<int>* tree1 = new BNode<int>(1,
		new BNode<int>(2,
			new BNode<int>(4),
			new BNode<int>(5)),
		new BNode<int>(3,
			new BNode<int>(6)));
	cout << height(tree1) << endl;

	system("pause");
	return 0;
