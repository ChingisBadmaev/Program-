#include <iostream>
#include <cstdlib>
#include <omp.h>

using namespace std;

const int N = 100;
double A[N];
double A1[N];

int main()
{
	double t = omp_get_wtime();
	for (int i = 0; i < N; i++)
		A[i] = sin(i*3.14159 / (2*N));
	cout << omp_get_wtime() - t << endl;

	t = omp_get_wtime();
#pragma omp parallel sections
	{
#pragma omp section
		{
			for (int i = 0; i < N / 2; i++)
				A1[i] = sin(i * 3.14159 / (2 * N));
		}
#pragma omp section
		{
			for (int i = N / 2; i < N; i++)
				A1[i] = sin(i * 3.14159 / (2 * N));
		}
	}
	cout << omp_get_wtime() - t << endl;

	return EXIT_SUCCESS;
}
