#include <iostream>
#include <cstdlib>
#include <omp.h> 
#include <string>

using namespace std;

unsigned long long int f(string str)
{
	int i = 5000;
	while (str[i] != ' ') i++;
	unsigned long long int sum = 0;
	int a = 0, a1 = 0;
#pragma omp parallel sections reduction(+:sum) 
	{
#pragma omp section
		{
			int l = 0;
			while (l < i)
			{
				a = 0;
				while (str[l] != ' ' && l < i)
				{
					a *= 10;
					a += str[l] - '0';
					l++;
				}
				sum += a;
				l++;
			}
		}
#pragma omp section
		{
			int l1 = i;
			while (l1 < 10000)
			{
				a1 = 0;
				while (str[l1] != ' ' && l1 < 10000)
				{
					a1 *= 10;
					a1 += str[l1] - '0';
					l1++;
				}
				sum += a1;
				l1++;
			}
		}
	}
	return sum;
}

int main()
{
	/*string str = "1 23 456 78 90";
	cout << f(str) << endl;*/

	return EXIT_SUCCESS;
}
