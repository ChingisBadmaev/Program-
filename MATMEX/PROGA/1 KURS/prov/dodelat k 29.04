#include <iostream>
#include <vector>
#include <fstream>
using namespace std;

struct Item {
	virtual ~Item() {}
	virtual Item *read(ifstream st) {}
};

struct Integer : Item {
	int n;
	Integer(int p) { n = p; }
	Item *read(ifstream st) {
		int p;
		st >> p;
		return new Integer(p);
	}
};

struct String : Item {
	string str;
	String(string a) { str = a; }
	Item *read(ifstream st) {
		char c = st.get();
		string b;
		while (c != '"'){
			b += c;
			c = st.get();
		}
		return new String(b);
	}
};

struct List : Item {
	vector<Item *> A;
	List(vector<Item *> B) { A = B; }
	Item *read(ifstream st) {
		vector<Item *> B;	
		int i = 0;
		char c = st.get(), k;
		while (c != char(-1)) {
			if (c == ']') return new List(B);
			if (c == ',') st >> c;
			if (c != '"' && c != '[') {
				int p = c - '0';
				k = st.get();
				while(k != ' '){
					p *= 10;
					p += k - '0';
				}
				B[i] = new Integer(p);
				i++;
				st >> c;
				continue;
			}
			if (c == '"') {
				string b;
				k = st.get();
				while (k != '"'){
					b += k;
					k = st.get();
				}
				B[i] = new String(b);
				i++;
				st >> c;
				continue;
			}
			if (c == '[') {
				B[i] = read(st);
				i++;
				st >> c;
				continue;
			}
		}
		return new List(B);
	}
};

int main() {
	ifstream st("g.txt");
	vector<Item *> A = read(st);
	
	system("pause");
	return 0;
}
