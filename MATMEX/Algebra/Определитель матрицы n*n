#include <iostream>
using namespace std;

template<class T>
void print(T **V, int n){
	for (int i = 0; i < n; i++){
		for (int l = 0; l < n; l++)
			cout << V[i][l] << " ";
		cout << endl;
	}
	cout << endl;
}

double vichel(double **V, int n){
	double ans = 1;
	for (int i = 0; i < n; i++)
		ans *= V[i][i];
	return ans;
}

bool g(double **V, int n, int a){
	double *tmp = V[a];
	int q = 0;
	for (int i = a; i < n; i++)
		if (fabs(V[i][a]) > 10e-6){
		V[a] = V[i];
		V[i] = tmp;
		q = 1;
		break;
		}
	if (q == 0)
		return 0;
	return 1;
}

void f(double **V, int n, int k = 0){
	if (fabs(V[k][k]) < 10e-6)
		if (g(V, n, k) == 0)
			return;
	if (k >= n - 1)
		return;
	double t = 0;
	for (int i = 1 + k; i < n; i++){
		t = V[i][k] / V[k][k];
		for (int l = k; l < n; l++)
			V[i][l] -= V[k][l] * t;
	}
	print(V, n);
	f(V, n, k + 1);
}

int main() {
	int n;
	cin >> n;
	double **A = new double*[n];
	for (int i = 0; i < n; i++)
		A[i] = new double[n];
	for (int i = 0; i < n; i++)
		for (int l = 0; l < n; l++)
			cin >> A[i][l];
	f(A, n);
	cout << vichel(A, n) << endl;
	system("pause");
	return 0;
}
