#include <iostream>
using namespace std;

template<class T> //компилятор сам определяет тип данных
T min(T x, T y) {
	return x < y ? x : y;
}

template<class T, int size> //компилятор определяет тип массива сам
void print(T (&x)[size]) {
	for (int i = 0; i < size; i++)
		cout << " " << x[i];
}

inline void f(int n) { //работает как #define только для всего тела функции
	cout << n * 5;
}

const int N = 5;

constexpr int fib(int n){ //вычисление const до компиляции программы
	return n <= 2 ? 1 : fib(n - 1) + fib(n - 2);
}

int main() {
	int n;
	cin >> n;
	f(n);
	int A[fib(n)]; //объявление не динамического массива 
	print(A); //вызов
	cout << " " << min(2 * n, n + 4);
	cout << " " << min<double>(1, 2.0); //мы можем сами выбирать тип функции
	system("pause");
	return 0;
}
