#include <iostream>
using namespace std;
void mergesort(int n, int size, int* &A){
  if(size == n){
    insertsort(A, 0, n);
    return;
  }
  int r = 0, l = 0, r1 = 1;
  for(int i = 0; i < n-1; i++){
    if(A[i] < A[i+1])
      while(A[r] < [r+1] && r < size)
        r++;
    else{
      while(A[r] > [r+1] && r < size)
        r++;
      for(int j = l; j < r-r1; j++){
        swap(A[j], A[r-r1])
        r1++;
      }
      r1 = 1;
    }
    if(r < size)
      r = size;
    intersort(A, l, r);
    l = r;
  }
}
void insertsort(int* &A, int l, int r){
  int* B = new int[r-l];
  B[0] = B[l];
  int j = 0, k = 0;
  for(int i = l+1; i < r; i++){
    while(B[j] > A[i] && j > 0){
      j--;
      k++;
    }
    while()
  }
}
int main(){
  int n, size = 8;
  cin >> n;
  if(n <= 64)
    size = n;
  else 
    while(n % size != 0)
      size += 2;
  int* A = new int[n];
  for(int i = 0; i < n; i++)
    cin >> A[i];
  mergesort(n, size, A);
  return 0;
}
