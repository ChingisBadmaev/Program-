#include <iostream>
#include <stdlib.h>
using namespace std;
void bubblesort(int* &A, int l, int r){
  for(int i = l; i < r; i++)
    for(int j = i; j < r; j++)
      if(A[i] < A[j])
        swap(A[i], A[j]);
}
void mergesort(int* &A, int size, int l, int r){
  if(size >= r-l){
    bubblesort(A, l, r);
    return;
  }
  mergesort(A, size, l, (r+l)/2);
  mergesort(A, size, (r+l)/2, r);
  int* B = new int[r-l];
  int n1 = l, n2 = (r+l)/2, n3 = 0;
  while(n1 < (r+l)/2 && n2 < r){
    while(n1 < (r+l)/2)
      if(A[n1] < A[n2]){
        B[n3] = A[n1];
        n1++;
        n3++;
      }
    while(n2 < r)
      if(A[n1] > A[n2]){
        B[n3] = A[n2];
        n2++;
        n3++;
      }
  }
  if(n2 < r)
    for(int i = n3; i < r-l; i++){
      B[i] = A[n2];
      n2++;
    }
  if(n1 < (r+l)/2)
    for(int i = n3; i < r-l; i++){
      B[i] = A[n1];
      n1++;
    }
  n3 = 0;
  for(int i = l; i < r; i++){
    A[i] = B[n3];
    n3++;
  }
}
int main(){
  int n, size = 8;
  cin >> n;
  int* A = new int[n];
  for(int i = 0; i < n; i++)
    A[i] = rand()%1000;
  if(n <= 64)
    bubblesort(A, 0, n);
  else mergesort(A, size, 0, n);
  for(int i = 0; i < n; i++)
    cout << A[i] << " ";
  return 0;
}
