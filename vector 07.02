#include <iostream> 
using namespace std; 
class vector{ 
int* Array; 
int size; 
int cap; 
public: 
vector(int n){ 
Array = new int[n]; 
size = n; 
cap = 0; 
} 

void push(int a){ 
if (size <= cap){ 
append(size*2); 
size *= 2; 
} 
Array[cap] = a; 
cap++; 
} 

int size_now(){ 
return cap; 
} 

int find(int a){ 
int i = 0; 
while(a!=Array[i]&&Array[i+1]!='\0') 
i++; 
if(a == Array[i]) 
return i; 
return -1; 
} 

void del(int a){ 
for (int i = 0; i < cap; i++) 
if (Array[i] == a){ 
for (int l = i; l < cap-1; l++) 
Array[l] = Array[l+1]; 
Array[cap-1] = '\0'; 
cap--; 
} 
} 

void append(int new_size){ 
int* Array1 = new int[new_size]; 
for (int i = 0; i < new_size; i++){ 
Array1[i] = Array[i]; 
} 
Array = Array1; 
} 

int& operator[](const int i){ 
int k = 1;
if(i < cap && i > -1) 
return Array[i-1];
if (i < 0)
k = -1;
cout << "ошибка";
if (k == 1)
return (Array[i % cap]);
return (Array[-i % cap]);
} 

const int& operator[](const int i) const{ 
int k = 1;
if(i < cap && i > -1) 
return Array[i-1];
if (i < 0)
k = -1;
cout << "ошибка";
if (k == 1)
return Array[i % cap];
return Array[-i % cap];
} 

~vector(){ 
delete Array; 
} 
}; 

int main(){ 
int n; 
cin >> n; 
vector obj1(n); 
obj1.push(n); 
obj1.push(n+1); 
obj1.push(n+2); 
obj1[1] = n+1; 
cout << obj1.size_now() << endl; 
cout << obj1.find(n+1) << endl; 
cout << obj1[2] << endl; 
return 0; 
}
