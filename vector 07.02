#include <iostream>
using namespace std;
class vector{
 int* Array;
 int size;
 int cap;
  public:
   vector(int n){
     Array = new int[n];
     head -> data = a;
     head -> next = NULL;
   }
   void push_head(int a){
     node* temp = new node;
     temp -> next = head;
     temp -> data = a;
     head = temp;
   }
   void push_back(int a){
     node* temp = new node;
     if (head == NULL){
      temp -> next = head;
      temp -> data = a;
      head = temp;
      return;
     }
     temp = head;
     while(temp -> next != NULL)
      temp = temp -> next;
     node* temp1 = new node;
     temp -> next = temp1;
     temp1 -> data = a;
     temp1 -> next = NULL;
   }
   void push_data(int a, int data){
     node* temp = head;
     while ( (temp -> data != data) && (temp!=NULL) ){
      temp = temp -> next;
      if(temp==NULL)
      	return;
     }
     node* temp1 = new node;
     temp1 -> next = temp -> next;
     temp1 -> data = a;
     temp -> next = temp1;
   }
   int get(int i){
     node* temp = head;
     for(int l = 1; l < i; l++)
      temp = temp -> next;
     return temp -> data;
   }
   int size(){
     int a = 1;
     node* temp = head;
     while (temp -> next != NULL){
      temp = temp -> next;
      a++;
     }
     return a;
   }
   bool del(int i){
     node* temp = head;
     int a;
     if(i == 1){
       head = head -> next;
       delete temp;
       return 1;
     }
     for(int l = 1; l < i-1; l++){
      temp = temp -> next;
      if (temp==NULL){
      	cout<<"No";
      	return 0;
      }
     }
     node* temp1 = temp -> next;
     temp -> next = temp -> next -> next;
     delete temp1;
     return 1;
   }
   int find(int a){
     node* temp = head;
     int i = 1;
     while(a != temp -> data && temp -> next != NULL){
      temp = temp -> next;
      i++;
     }
     if(a == temp -> data)
      return i;
     return -1;
   }
   void append(int new_size){}
   int operator[](int i){}
   const int& operator[](int i) const{}
   ~vector(){
     while(head != NULL){
      node* temp = head;
      head = head -> next;
      delete temp;
     }
   }
};
int main(){
 
 return 0;
}
