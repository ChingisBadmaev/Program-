import random
import math
import matplotlib.pyplot as plt
import numpy as np

#------------------------------------------
#АЛГОРИТМ В
#коэффициент корреляции
p = 0.47
#медиана по силе тока
current_strength_median = 33.3
#средне квадртичное отклонение по силе тока
current_strength_sigma = 0.605
#медиана по времени фронта
time_median = 3.83
#средне квадратичное отклонение по времени фронта
time_sigma = 0.553
#список Z_n 
Z_n = []
#список U_n 
U_n = []
#список I_p_n 
I_p_n = []
#список t_f_n
t_f_n = []
#список y_n 
y_n = []

#вычисление I_p_n
def compute_I_p_n():
    Z_n.append(random.uniform(0, 1))
    I_p_n.append(math.exp(math.log(current_strength_median) + math.log(current_strength_sigma) * Z_n[len(Z_n) - 1]))

#вычисление t_f_n
def compute_t_f_n():
    time_median1 = math.log(time_median) + p * (math.log(time_sigma)/math.log(current_strength_sigma)) * (math.log(I_p_n[len(I_p_n) - 1]) - math.log(current_strength_median)) #time_median*
    time_sigma1 = math.log(time_sigma) * math.sqrt(1 - p**2) #time_sigma*
    Z_n.append(random.uniform(0, 1))
    t_f_n.append(math.exp(time_median1 + time_sigma1 * Z_n[len(Z_n) - 1]))#?-------------------

#вычисление y_n
def compute_y_n(y_max):
    U_n.append(random.uniform(0, 1))
    y_n.append(U_n[len(U_n) - 1] * y_max)

#100 молний
def create_lightn():
    t = 0
    while t < 1000:
        compute_I_p_n()
        compute_t_f_n()
        #compute_y_n(y_max)
        t += 1

#график молний
def scatterplot_lightn(x_data, x_label="", y_label="", title="", color = "r", yscale_log=False):
    _, ax = plt.subplots()
    #список для количества значений сила тока молний
    y_data = []
    for i in range(800):
        y_data.append(0)
    for i in range(len(x_data)):
        y_data[math.floor(4 * x_data[i])] += 1
    for i in range(len(y_data)):
        if(y_data[i] != 0):
            ax.scatter(i/4, y_data[i]/len(x_data), s = 10, color = "b", alpha = 1)            
    ax.set_title(title)
    ax.set_xlabel(x_label)
    ax.set_ylabel(y_label)

create_lightn()
scatterplot_lightn(I_p_n, "I_p", "number", "lightn")
plt.show()
#print(I_p_n)
