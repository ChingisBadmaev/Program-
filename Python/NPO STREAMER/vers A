import random
import math
import matplotlib.pyplot as plt
import numpy as np

#вероятность, что ток молнии не меньше данного
def probability(current_strength):
    return 1/(1 + (current_strength/31)**2.6)

#вычисление y_min_i
def y_min_i(height, current_strength):
    r_s_i = 10 * current_strength**0.65
    r_g_i = 0.9 * r_s_i
    if(height >= r_g_i):
        return r_s_i
    else: 
        return math.sqrt(r_s_i**2 - (r_g_i - height)**2)

#вычисление y_max_i
def y_max_i(CFO, height, current_strength):
    return 30 * (current_strength * height)/(1.5 * CFO) * (1 + (0.4/math.sqrt(2)) * (1/math.sqrt(0.92)))
#0.92 = 1 - 0.5 * 0.4**2

#вычисление количства перекрытий на 100 км за год (B)
def num_of_insulation_flashovers(CFO, height, N_g = 1):
    sum = 0.0
    for i in range(200):
        if(y_max_i(CFO, height, i) > y_min_i(height, i)):
            sum += (y_max_i(CFO, height, i) - y_min_i(height, i)) * (probability(i) - probability(i + 1))
    return 0.2 * sum * N_g

#Построение линий
def create_line(height, color):
    A = []
    B = []
    for i in range(50, 325, 25):
        A.append(i)
        B.append(math.log(num_of_insulation_flashovers(i, height) + 0.0001))
    plt.plot(A, B, color = color, marker = 'o', linestyle = '-', markerfacecolor = color, label = str(height) + ' метров')

#вывод графика
def print_schedule(height):
    #Линии для hieght[i]
    for i in range(len(height)):
        create_line(height[i], colors[i])
    #Оформление графика
    plt.xlabel('CFO (kV)', fontsize = 14)
    plt.ylabel('Flashovers/100km/yr', fontsize = 14)
    plt.title('Schedule', fontsize = 15)
    plt.grid()
    plt.ylim(-10, 6)
    plt.xlim(30, 330)
    for i in range(7):
        plt.text(35, math.log(10**(2 - i)), str(10**(2 - i)))
    plt.legend(loc = 'best')
    plt.show()

#запуск для 10, 15, 20 метровой линии
colors = ['b', 'g', 'r', 'c', 'm', 'y', 'k', 'w']
height1 = [10, 15, 20]
print_schedule(height1)
