#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int** C;
int* A;
int* B;
int* used;
int n, m;
vector <int> ans;
void dfs(int v){
  used[v] = 1;
  for(int t0 = 0; t0 < m; t0++){
    if(!used[t0] && C[v][t0] == 1)
      dfs(t0);
    ans.push_back(t0);
  }
}
void fop_sort(){
  for(int i = 0; i < m; i++)
    if(!used[i])
      dfs(i);
  reverse(ans.begin(), ans.end());
}
void matrix_smew(){
  C = new int*[m];	
  for(int i = 0; i < m; i++)	 
    C[i] = new int[m];    
  for(int l = 0; l < m; l++)
    for(int i = 0; i < n; i++)
      if(A[i] == l)
        C[l][B[i]] = 1;
}
int main(){
    cin >> n >> m;
    used = new int[m];
    ans.reserve(m);
    A = new int[n];
    B = new int[n];
    for(int i = 0; i < n; i++)
      cin >> A[i] >> B[i];
    matrix_smew;
    fop_sort;
    return 0;
}
