#include <iostream> 
#include <cmath> 
using namespace std; 
int shortest_path(int** a, int n, int m, int N, int M, int dln){ 
 if (n<N || m<M){ 
  if (m<M)
   a[n][m+1] = a[n][m] + 100; 
  if (n<N)
   a[n+1][m] = a[n][m] + 100; 
  if (a[n+1][m]<a[n][m+1]){ 
   dln += a[n+1][m]; 
   shortest_path(a, n+1, m, N, M, dln); 
  } 
  else { 
   dln += a[n][m+1]; 
   shortest_path(a, n, m+1, N, M, dln); 
  } 
 } 
 else return dln; 
} 
int main(){ 
 int N, M; 
 cin >> M >> N; 
 int** a = new int*[N]; 
 for (int i = 0; i < N; i++) 
  a[i] = new int[M]; 
 a[0][0] = 0; 
 for (int i = 1; i < N; i++) 
  a[i][0] = a[i-1][0] + 100;
 for (int i = 0; i < N; i++)
  for (int l = 1; l < M; l++) 
   a[i][l] = a[i][l-1] + 100;
 for (int i = 0; i < N; i++){
  for (int l = 0; l < M; l++) 
   cout << a[i][l] << " ";
  cout << endl;
 }
 return 0; 
}
